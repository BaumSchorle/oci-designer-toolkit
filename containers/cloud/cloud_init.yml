#cloud-config
packages:
  - git

write_files:
  # Add aliases to bash (Note: At time of writing the append flag does not appear to be working)
  - path: /etc/.bashrc
    append: true
    content: |
      alias lh='ls -lash'
      alias lt='ls -last'
      alias env='/usr/bin/env | sort'
  # Create empty config
  - path: /root/.oci/config
    permissions: '0644'
    content: |
      [DEFAULT]
      user=
      fingerprint=
      key_file=
      tenancy=ocid1.tenancy.oc1..aaaaaaaaa3qmjxr43tjexx75r6gwk6vjw22ermohbw2vbxyhczksgjir7xdq
      region=us-phoenix-1

runcmd:
  # Install Required Python Modules
  - pip3 install --no-cache-dir flask==1.1.1 gunicorn==20.0.4 oci=2.22.0 pyyaml==5.2
  # Clone OKIT
  - sudo bash -c "git clone --depth 1 https://github.com/oracle/oci-designer-toolkit.git /okit"
  - sudo bash -c "mkdir /okit/{log,workspace}"
  # Set Firewall Rules
  - sudo firewall-offline-cmd  --add-port=80/tcp
  - sudo systemctl restart firewalld
  # Add additional environment information because append does not appear to work in write_file
  - sudo bash -c "echo 'source /etc/.bashrc' >> /etc/bashrc"
  # Copy Flask / GUnicorn Service Files
  - sudo cp /okit/containers/services/flask.service /etc/systemd/system/flask.service
  - sudo cp /okit/containers/services/gunicorn.service /etc/systemd/system/gunicorn.service
  - sudo cp /okit/containers/services/gunicorn.socket /etc/systemd/system/gunicorn.socket
  # Enable Flask Service
  #- sudo systemctl enable flask.service
  #- sudo systemctl start flask.service
  # Enable Gunicorn Service
  #- sudo systemctl enable gunicorn.socket
  #- sudo systemctl start gunicorn.socket
  - sudo systemctl enable gunicorn.service
  - sudo systemctl start gunicorn.service

final_message: "**** The system is finally up, after $UPTIME seconds ****"
